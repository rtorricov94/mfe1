{
  "version": 3,
  "sources": ["../../@angular/flex-layout/fesm2020/angular-flex-layout-_private-utils.mjs"],
  "sourcesContent": ["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nfunction applyCssPrefixes(target) {\n    for (let key in target) {\n        let value = target[key] ?? '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst INLINE = 'inline';\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nfunction validateValue(value) {\n    value = value?.toLowerCase() ?? '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find(x => x === direction)) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nfunction isFlowHorizontal(value) {\n    let [flow,] = validateValue(value);\n    return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won\u2019t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        display: inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': wrap || null,\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INLINE, LAYOUT_VALUES, applyCssPrefixes, buildLayoutCSS, extendObject, isFlowHorizontal, validateValue, validateWrapValue };\n\n"],
  "mappings": ";AAmBA,SAAS,iBAAiB,QAAQ;AAC9B,WAAS,OAAO,QAAQ;AACpB,QAAI,QAAQ,OAAO,GAAG,KAAK;AAC3B,YAAQ,KAAK;AAAA,MACT,KAAK;AACD,YAAI,UAAU,QAAQ;AAClB,iBAAO,SAAS,IAAI;AAAA,YAChB;AAAA,YACA;AAAA,UACJ;AAAA,QACJ,WACS,UAAU,eAAe;AAC9B,iBAAO,SAAS,IAAI;AAAA,YAChB;AAAA,YACA;AAAA,UACJ;AAAA,QACJ,OACK;AACD,iBAAO,SAAS,IAAI;AAAA,QACxB;AACA;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,aAAa,GAAG,IAAI;AAC3B;AAAA,MACJ,KAAK;AACD,eAAO,wBAAwB,IAAI;AACnC,eAAO,gBAAgB,IAAI;AAC3B;AAAA,MACJ,KAAK;AACD,eAAO,OAAO,IAAI,OAAO,aAAa,GAAG,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM;AACnE;AAAA,IACR;AAAA,EACJ;AACA,SAAO;AACX;AASA,IAAM,SAAS;AACf,IAAM,gBAAgB,CAAC,OAAO,UAAU,eAAe,gBAAgB;AAIvE,SAAS,eAAe,OAAO;AAC3B,MAAI,CAAC,WAAW,MAAM,QAAQ,IAAI,cAAc,KAAK;AACrD,SAAO,SAAS,WAAW,MAAM,QAAQ;AAC7C;AAKA,SAAS,cAAc,OAAO;AAC1B,UAAQ,OAAO,YAAY,KAAK;AAChC,MAAI,CAAC,WAAW,MAAM,MAAM,IAAI,MAAM,MAAM,GAAG;AAE/C,MAAI,CAAC,cAAc,KAAK,OAAK,MAAM,SAAS,GAAG;AAC3C,gBAAY,cAAc,CAAC;AAAA,EAC/B;AACA,MAAI,SAAS,QAAQ;AACjB,WAAQ,WAAW,SAAU,SAAS;AACtC,aAAS;AAAA,EACb;AACA,SAAO,CAAC,WAAW,kBAAkB,IAAI,GAAG,CAAC,CAAC,MAAM;AACxD;AAKA,SAAS,iBAAiB,OAAO;AAC7B,MAAI,CAAC,IAAK,IAAI,cAAc,KAAK;AACjC,SAAO,KAAK,QAAQ,KAAK,IAAI;AACjC;AAIA,SAAS,kBAAkB,OAAO;AAC9B,MAAI,CAAC,CAAC,OAAO;AACT,YAAQ,MAAM,YAAY,GAAG;AAAA,MACzB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAQ;AACR;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAQ;AACR;AAAA,MAEJ;AACI,gBAAQ;AACR;AAAA,IACR;AAAA,EACJ;AACA,SAAO;AACX;AAUA,SAAS,SAAS,WAAW,OAAO,MAAM,SAAS,OAAO;AACtD,SAAO;AAAA,IACH,SAAS,SAAS,gBAAgB;AAAA,IAClC,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa,QAAQ;AAAA,EACzB;AACJ;AAgBA,SAAS,aAAa,SAAS,SAAS;AACpC,MAAI,QAAQ,MAAM;AACd,UAAM,UAAU,4CAA4C;AAAA,EAChE;AACA,WAAS,UAAU,SAAS;AACxB,QAAI,UAAU,MAAM;AAChB,eAAS,OAAO,QAAQ;AACpB,YAAI,OAAO,eAAe,GAAG,GAAG;AAC5B,eAAK,GAAG,IAAI,OAAO,GAAG;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": []
}
