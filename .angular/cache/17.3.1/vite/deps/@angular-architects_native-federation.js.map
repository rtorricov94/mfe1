{
  "version": 3,
  "sources": ["../../../../../node_modules/@softarc/native-federation-runtime/fesm2022/softarc-native-federation-runtime.mjs"],
  "sourcesContent": ["function mergeImportMaps(map1, map2) {\n    return {\n        imports: { ...map1.imports, ...map2.imports },\n        scopes: { ...map1.scopes, ...map2.scopes },\n    };\n}\n\nconst nfNamespace = '__NATIVE_FEDERATION__';\nconst global = globalThis;\nglobal[nfNamespace] ??= {\n    externals: new Map(),\n    remoteNamesToRemote: new Map(),\n    baseUrlToRemoteNames: new Map(),\n};\nconst globalCache = global[nfNamespace];\n\nconst externals = globalCache.externals;\nfunction getExternalKey(shared) {\n    return `${shared.packageName}@${shared.version}`;\n}\nfunction getExternalUrl(shared) {\n    const packageKey = getExternalKey(shared);\n    return externals.get(packageKey);\n}\nfunction setExternalUrl(shared, url) {\n    const packageKey = getExternalKey(shared);\n    externals.set(packageKey, url);\n}\n\nfunction getDirectory(url) {\n    const parts = url.split('/');\n    parts.pop();\n    return parts.join('/');\n}\nfunction joinPaths(path1, path2) {\n    while (path1.endsWith('/')) {\n        path1 = path1.substring(0, path1.length - 1);\n    }\n    if (path2.startsWith('./')) {\n        path2 = path2.substring(2, path2.length);\n    }\n    return `${path1}/${path2}`;\n}\n\nconst remoteNamesToRemote = globalCache.remoteNamesToRemote;\nconst baseUrlToRemoteNames = globalCache.baseUrlToRemoteNames;\nfunction addRemote(remoteName, remote) {\n    remoteNamesToRemote.set(remoteName, remote);\n    baseUrlToRemoteNames.set(remote.baseUrl, remoteName);\n}\nfunction getRemoteNameByBaseUrl(baseUrl) {\n    return baseUrlToRemoteNames.get(baseUrl);\n}\nfunction isRemoteInitialized(baseUrl) {\n    return baseUrlToRemoteNames.has(baseUrl);\n}\nfunction getRemote(remoteName) {\n    return remoteNamesToRemote.get(remoteName);\n}\nfunction hasRemote(remoteName) {\n    return remoteNamesToRemote.has(remoteName);\n}\n\nfunction appendImportMap(importMap) {\n    document.body.appendChild(Object.assign(document.createElement('script'), {\n        type: 'importmap-shim',\n        innerHTML: JSON.stringify(importMap),\n    }));\n}\n\nasync function initFederation(remotesOrManifestUrl = {}) {\n    const remotes = typeof remotesOrManifestUrl === 'string'\n        ? await loadManifest(remotesOrManifestUrl)\n        : remotesOrManifestUrl;\n    const hostImportMap = await processHostInfo();\n    const remotesImportMap = await processRemoteInfos(remotes);\n    const importMap = mergeImportMaps(hostImportMap, remotesImportMap);\n    appendImportMap(importMap);\n    return importMap;\n}\nasync function loadManifest(remotes) {\n    return (await fetch(remotes).then((r) => r.json()));\n}\nasync function processRemoteInfos(remotes) {\n    let importMap = {\n        imports: {},\n        scopes: {},\n    };\n    for (const remoteName of Object.keys(remotes)) {\n        try {\n            const url = remotes[remoteName];\n            const remoteMap = await processRemoteInfo(url, remoteName);\n            importMap = mergeImportMaps(importMap, remoteMap);\n        }\n        catch (e) {\n            console.error(`Error loading remote entry for ${remoteName} from file ${remotes[remoteName]}`);\n        }\n    }\n    return importMap;\n}\nasync function processRemoteInfo(federationInfoUrl, remoteName) {\n    const baseUrl = getDirectory(federationInfoUrl);\n    const remoteInfo = await loadFederationInfo(federationInfoUrl);\n    if (!remoteName) {\n        remoteName = remoteInfo.name;\n    }\n    const importMap = createRemoteImportMap(remoteInfo, remoteName, baseUrl);\n    addRemote(remoteName, { ...remoteInfo, baseUrl });\n    return importMap;\n}\nfunction createRemoteImportMap(remoteInfo, remoteName, baseUrl) {\n    const imports = processExposed(remoteInfo, remoteName, baseUrl);\n    const scopes = processRemoteImports(remoteInfo, baseUrl);\n    return { imports, scopes };\n}\nasync function loadFederationInfo(url) {\n    const info = (await fetch(url).then((r) => r.json()));\n    return info;\n}\nfunction processRemoteImports(remoteInfo, baseUrl) {\n    const scopes = {};\n    const scopedImports = {};\n    for (const shared of remoteInfo.shared) {\n        const outFileName = getExternalUrl(shared) ?? joinPaths(baseUrl, shared.outFileName);\n        setExternalUrl(shared, outFileName);\n        scopedImports[shared.packageName] = outFileName;\n    }\n    scopes[baseUrl + '/'] = scopedImports;\n    return scopes;\n}\nfunction processExposed(remoteInfo, remoteName, baseUrl) {\n    const imports = {};\n    for (const exposed of remoteInfo.exposes) {\n        const key = joinPaths(remoteName, exposed.key);\n        const value = joinPaths(baseUrl, exposed.outFileName);\n        imports[key] = value;\n    }\n    return imports;\n}\nasync function processHostInfo() {\n    const hostInfo = await loadFederationInfo('./remoteEntry.json');\n    const imports = hostInfo.shared.reduce((acc, cur) => ({ ...acc, [cur.packageName]: './' + cur.outFileName }), {});\n    for (const shared of hostInfo.shared) {\n        setExternalUrl(shared, './' + shared.outFileName);\n    }\n    return { imports, scopes: {} };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nasync function loadRemoteModule(optionsOrRemoteName, exposedModule) {\n    const options = normalizeOptions(optionsOrRemoteName, exposedModule);\n    await ensureRemoteInitialized(options);\n    const remoteName = getRemoteNameByOptions(options);\n    const remote = getRemote(remoteName);\n    if (!remote) {\n        throw new Error('unknown remote ' + remoteName);\n    }\n    const exposed = remote.exposes.find((e) => e.key === options.exposedModule);\n    if (!exposed) {\n        throw new Error(`Unknown exposed module ${options.exposedModule} in remote ${remoteName}`);\n    }\n    const url = joinPaths(remote.baseUrl, exposed.outFileName);\n    const module = await importShim(url);\n    return module;\n}\nfunction getRemoteNameByOptions(options) {\n    let remoteName;\n    if (options.remoteName) {\n        remoteName = options.remoteName;\n    }\n    else if (options.remoteEntry) {\n        const baseUrl = getDirectory(options.remoteEntry);\n        remoteName = getRemoteNameByBaseUrl(baseUrl);\n    }\n    else {\n        throw new Error('unexpcted arguments: Please pass remoteName or remoteEntry');\n    }\n    if (!remoteName) {\n        throw new Error('unknown remoteName ' + remoteName);\n    }\n    return remoteName;\n}\nasync function ensureRemoteInitialized(options) {\n    if (options.remoteEntry &&\n        !isRemoteInitialized(getDirectory(options.remoteEntry))) {\n        const importMap = await processRemoteInfo(options.remoteEntry);\n        appendImportMap(importMap);\n    }\n}\nfunction normalizeOptions(optionsOrRemoteName, exposedModule) {\n    let options;\n    if (typeof optionsOrRemoteName === 'string' && exposedModule) {\n        options = {\n            remoteName: optionsOrRemoteName,\n            exposedModule,\n        };\n    }\n    else if (typeof optionsOrRemoteName === 'object' && !exposedModule) {\n        options = optionsOrRemoteName;\n    }\n    else {\n        throw new Error('unexpected arguments: please pass options or a remoteName/exposedModule-pair');\n    }\n    return options;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { initFederation, loadRemoteModule, processRemoteInfo };\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB,MAAM,MAAM;AACjC,SAAO;AAAA,IACH,SAAS,kCAAK,KAAK,UAAY,KAAK;AAAA,IACpC,QAAQ,kCAAK,KAAK,SAAW,KAAK;AAAA,EACtC;AACJ;AAEA,IAAM,cAAc;AACpB,IAAM,SAAS;AACf,OAAO,WAAW,MAAM;AAAA,EACpB,WAAW,oBAAI,IAAI;AAAA,EACnB,qBAAqB,oBAAI,IAAI;AAAA,EAC7B,sBAAsB,oBAAI,IAAI;AAClC;AACA,IAAM,cAAc,OAAO,WAAW;AAEtC,IAAM,YAAY,YAAY;AAC9B,SAAS,eAAe,QAAQ;AAC5B,SAAO,GAAG,OAAO,WAAW,IAAI,OAAO,OAAO;AAClD;AACA,SAAS,eAAe,QAAQ;AAC5B,QAAM,aAAa,eAAe,MAAM;AACxC,SAAO,UAAU,IAAI,UAAU;AACnC;AACA,SAAS,eAAe,QAAQ,KAAK;AACjC,QAAM,aAAa,eAAe,MAAM;AACxC,YAAU,IAAI,YAAY,GAAG;AACjC;AAEA,SAAS,aAAa,KAAK;AACvB,QAAM,QAAQ,IAAI,MAAM,GAAG;AAC3B,QAAM,IAAI;AACV,SAAO,MAAM,KAAK,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,OAAO;AAC7B,SAAO,MAAM,SAAS,GAAG,GAAG;AACxB,YAAQ,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC;AAAA,EAC/C;AACA,MAAI,MAAM,WAAW,IAAI,GAAG;AACxB,YAAQ,MAAM,UAAU,GAAG,MAAM,MAAM;AAAA,EAC3C;AACA,SAAO,GAAG,KAAK,IAAI,KAAK;AAC5B;AAEA,IAAM,sBAAsB,YAAY;AACxC,IAAM,uBAAuB,YAAY;AACzC,SAAS,UAAU,YAAY,QAAQ;AACnC,sBAAoB,IAAI,YAAY,MAAM;AAC1C,uBAAqB,IAAI,OAAO,SAAS,UAAU;AACvD;AACA,SAAS,uBAAuB,SAAS;AACrC,SAAO,qBAAqB,IAAI,OAAO;AAC3C;AACA,SAAS,oBAAoB,SAAS;AAClC,SAAO,qBAAqB,IAAI,OAAO;AAC3C;AACA,SAAS,UAAU,YAAY;AAC3B,SAAO,oBAAoB,IAAI,UAAU;AAC7C;AAKA,SAAS,gBAAgB,WAAW;AAChC,WAAS,KAAK,YAAY,OAAO,OAAO,SAAS,cAAc,QAAQ,GAAG;AAAA,IACtE,MAAM;AAAA,IACN,WAAW,KAAK,UAAU,SAAS;AAAA,EACvC,CAAC,CAAC;AACN;AAEA,SAAe,iBAA0C;AAAA,6CAA3B,uBAAuB,CAAC,GAAG;AACrD,UAAM,UAAU,OAAO,yBAAyB,WAC1C,MAAM,aAAa,oBAAoB,IACvC;AACN,UAAM,gBAAgB,MAAM,gBAAgB;AAC5C,UAAM,mBAAmB,MAAM,mBAAmB,OAAO;AACzD,UAAM,YAAY,gBAAgB,eAAe,gBAAgB;AACjE,oBAAgB,SAAS;AACzB,WAAO;AAAA,EACX;AAAA;AACA,SAAe,aAAa,SAAS;AAAA;AACjC,WAAQ,MAAM,MAAM,OAAO,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AAAA,EACrD;AAAA;AACA,SAAe,mBAAmB,SAAS;AAAA;AACvC,QAAI,YAAY;AAAA,MACZ,SAAS,CAAC;AAAA,MACV,QAAQ,CAAC;AAAA,IACb;AACA,eAAW,cAAc,OAAO,KAAK,OAAO,GAAG;AAC3C,UAAI;AACA,cAAM,MAAM,QAAQ,UAAU;AAC9B,cAAM,YAAY,MAAM,kBAAkB,KAAK,UAAU;AACzD,oBAAY,gBAAgB,WAAW,SAAS;AAAA,MACpD,SACO,GAAG;AACN,gBAAQ,MAAM,kCAAkC,UAAU,cAAc,QAAQ,UAAU,CAAC,EAAE;AAAA,MACjG;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA;AACA,SAAe,kBAAkB,mBAAmB,YAAY;AAAA;AAC5D,UAAM,UAAU,aAAa,iBAAiB;AAC9C,UAAM,aAAa,MAAM,mBAAmB,iBAAiB;AAC7D,QAAI,CAAC,YAAY;AACb,mBAAa,WAAW;AAAA,IAC5B;AACA,UAAM,YAAY,sBAAsB,YAAY,YAAY,OAAO;AACvE,cAAU,YAAY,iCAAK,aAAL,EAAiB,QAAQ,EAAC;AAChD,WAAO;AAAA,EACX;AAAA;AACA,SAAS,sBAAsB,YAAY,YAAY,SAAS;AAC5D,QAAM,UAAU,eAAe,YAAY,YAAY,OAAO;AAC9D,QAAM,SAAS,qBAAqB,YAAY,OAAO;AACvD,SAAO,EAAE,SAAS,OAAO;AAC7B;AACA,SAAe,mBAAmB,KAAK;AAAA;AACnC,UAAM,OAAQ,MAAM,MAAM,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AACnD,WAAO;AAAA,EACX;AAAA;AACA,SAAS,qBAAqB,YAAY,SAAS;AAC/C,QAAM,SAAS,CAAC;AAChB,QAAM,gBAAgB,CAAC;AACvB,aAAW,UAAU,WAAW,QAAQ;AACpC,UAAM,cAAc,eAAe,MAAM,KAAK,UAAU,SAAS,OAAO,WAAW;AACnF,mBAAe,QAAQ,WAAW;AAClC,kBAAc,OAAO,WAAW,IAAI;AAAA,EACxC;AACA,SAAO,UAAU,GAAG,IAAI;AACxB,SAAO;AACX;AACA,SAAS,eAAe,YAAY,YAAY,SAAS;AACrD,QAAM,UAAU,CAAC;AACjB,aAAW,WAAW,WAAW,SAAS;AACtC,UAAM,MAAM,UAAU,YAAY,QAAQ,GAAG;AAC7C,UAAM,QAAQ,UAAU,SAAS,QAAQ,WAAW;AACpD,YAAQ,GAAG,IAAI;AAAA,EACnB;AACA,SAAO;AACX;AACA,SAAe,kBAAkB;AAAA;AAC7B,UAAM,WAAW,MAAM,mBAAmB,oBAAoB;AAC9D,UAAM,UAAU,SAAS,OAAO,OAAO,CAAC,KAAK,QAAS,iCAAK,MAAL,EAAU,CAAC,IAAI,WAAW,GAAG,OAAO,IAAI,YAAY,IAAI,CAAC,CAAC;AAChH,eAAW,UAAU,SAAS,QAAQ;AAClC,qBAAe,QAAQ,OAAO,OAAO,WAAW;AAAA,IACpD;AACA,WAAO,EAAE,SAAS,QAAQ,CAAC,EAAE;AAAA,EACjC;AAAA;AAGA,SAAe,iBAAiB,qBAAqB,eAAe;AAAA;AAChE,UAAM,UAAU,iBAAiB,qBAAqB,aAAa;AACnE,UAAM,wBAAwB,OAAO;AACrC,UAAM,aAAa,uBAAuB,OAAO;AACjD,UAAM,SAAS,UAAU,UAAU;AACnC,QAAI,CAAC,QAAQ;AACT,YAAM,IAAI,MAAM,oBAAoB,UAAU;AAAA,IAClD;AACA,UAAM,UAAU,OAAO,QAAQ,KAAK,CAAC,MAAM,EAAE,QAAQ,QAAQ,aAAa;AAC1E,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,MAAM,0BAA0B,QAAQ,aAAa,cAAc,UAAU,EAAE;AAAA,IAC7F;AACA,UAAM,MAAM,UAAU,OAAO,SAAS,QAAQ,WAAW;AACzD,UAAM,SAAS,MAAM,WAAW,GAAG;AACnC,WAAO;AAAA,EACX;AAAA;AACA,SAAS,uBAAuB,SAAS;AACrC,MAAI;AACJ,MAAI,QAAQ,YAAY;AACpB,iBAAa,QAAQ;AAAA,EACzB,WACS,QAAQ,aAAa;AAC1B,UAAM,UAAU,aAAa,QAAQ,WAAW;AAChD,iBAAa,uBAAuB,OAAO;AAAA,EAC/C,OACK;AACD,UAAM,IAAI,MAAM,4DAA4D;AAAA,EAChF;AACA,MAAI,CAAC,YAAY;AACb,UAAM,IAAI,MAAM,wBAAwB,UAAU;AAAA,EACtD;AACA,SAAO;AACX;AACA,SAAe,wBAAwB,SAAS;AAAA;AAC5C,QAAI,QAAQ,eACR,CAAC,oBAAoB,aAAa,QAAQ,WAAW,CAAC,GAAG;AACzD,YAAM,YAAY,MAAM,kBAAkB,QAAQ,WAAW;AAC7D,sBAAgB,SAAS;AAAA,IAC7B;AAAA,EACJ;AAAA;AACA,SAAS,iBAAiB,qBAAqB,eAAe;AAC1D,MAAI;AACJ,MAAI,OAAO,wBAAwB,YAAY,eAAe;AAC1D,cAAU;AAAA,MACN,YAAY;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ,WACS,OAAO,wBAAwB,YAAY,CAAC,eAAe;AAChE,cAAU;AAAA,EACd,OACK;AACD,UAAM,IAAI,MAAM,8EAA8E;AAAA,EAClG;AACA,SAAO;AACX;",
  "names": []
}
